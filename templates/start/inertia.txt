/*
|--------------------------------------------------------------------------
| Inertia Preloaded File
|--------------------------------------------------------------------------
|
| Any code written inside this file will be executed during the application
| boot.
|
*/

import Inertia from '@ioc:EidelLev/Inertia';
import { storyConfig } from 'Config/story';
import { LanguageSpecification } from '@story-cms/ui';

const getLanguage = (locale: string | null): LanguageSpecification => {
  const found =
    storyConfig.languages.find((language) => language.locale === locale) ||
    storyConfig.languages[0];
  return found as LanguageSpecification;
};

Inertia.share({
  errors: (ctx) => {
    return ctx.session.flashMessages.get('errors') || {};
  },
  meta: () => storyConfig.meta,
  languages: () => storyConfig.languages,
  stories: () => storyConfig.stories.map((item) => item.name),
  language: (ctx) => getLanguage(ctx.session.get('locale')),
  user: (ctx) => ctx.auth.use('web').user,
});

// interface SharedPageProps {
//   errors?: any;
//   meta: Meta;
//   language: LanguageSpecification;
//   languages: LanguageSpecification[];
//   stories: string[];
//   user: User;
// }
