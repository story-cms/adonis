import { HttpContextContract } from '@ioc:Adonis/Core/HttpContext';
import Chapter from 'App/Models/Chapter';
import { storyConfig } from 'Config/story';
import ChapterService from 'App/Services/ChapterService';
import View from '@ioc:Adonis/Core/View';

export default class ChaptersController {
  public async preview(ctx: HttpContextContract) {
    if (!ctx.version || !ctx.story) return ctx.response.notFound();

    const version = ctx.version;
    const story = ctx.story;

    const specifier = {
      apiVersion: version.apiVersion,
      locale: version.locale,
      storyId: story.id,
      number: Number(ctx.params.number),
    };
    const chapter = await Chapter.query().where(specifier).firstOrFail();
    const bundleView = await View.render('preview', {
      bundle: chapter.bundle,
    });

    return ctx.inertia.render('ChapterPreview', {
      chapter: chapter,
      bundleView: bundleView,
    });
  }

  public async get(ctx: HttpContextContract) {
    if (!ctx.version || !ctx.story) return ctx.response.notFound();

    const specifier = {
      ...ctx.version,
      number: Number(ctx.params.number),
    };

    const chapter = await Chapter.query().where(specifier).firstOrFail();

    return { number: chapter.number, bundle: chapter.bundle };
  }

  public async range(ctx: HttpContextContract) {
    if (!ctx.version || !ctx.story) return ctx.response.notFound();

    const page = ctx.request.qs()['page'] || 1;

    const chapters = await Chapter.query()
      .whereBetween('number', [ctx.params.from, ctx.params.to])
      .where(ctx.version)
      .orderBy('number', 'asc')
      .paginate(page, 20);

    return chapters;
  }
}
