import { HttpContextContract } from '@ioc:Adonis/Core/HttpContext';
import { schema, rules } from '@ioc:Adonis/Core/Validator';

export default class AuthController {
  public async index({ inertia }: HttpContextContract) {
    return inertia.render('Login');
  }

  public async login({ session, auth, request, response }: HttpContextContract) {
    const postSchema = schema.create({
      email: schema.string([rules.trim(), rules.email()]),
      password: schema.string(),
      remember: schema.boolean(),
    });

    const payload = await request.validate({ schema: postSchema });

    try {
      await auth.attempt(payload.email, payload.password, payload.remember);
      session.put('locale', auth.user!.defaultLanguage());
      response.redirect('/');
    } catch {
      session.flash('errors', { credentials: 'Invalid username or password' });
      response.redirect().back();
    }
  }

  public async logout(ctx: HttpContextContract) {
    ctx.session.clear();
    await ctx.auth.logout();
    ctx.response.redirect('/login');
  }
}
